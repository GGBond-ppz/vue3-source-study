{
  "version": 3,
  "sources": ["../src/index.ts", "../src/parse.ts"],
  "sourcesContent": ["import { parse } from \"./parse\";\r\n\r\nexport function compile(template) {\r\n  // \u7F16\u8BD1\u539F\u7406\uFF0C\u5C06html\u8BED\u6CD5\u8F6C\u6362\u4E3Ajs\u8BED\u6CD5\r\n  // 1. \u5C06\u6A21\u677F\u8F6C\u6362\u4E3A\u62BD\u8C61\u8BED\u6CD5\u6811\r\n  const ast = parse(template);\r\n  return ast;\r\n  // 2. \u5BF9ast\u8BED\u6CD5\u6811\u8FDB\u884C\u4E00\u4E9B\u9884\u5148\u5904\u7406\r\n  // transform(ast)\r\n\r\n  // // \u751F\u6210\u4EE3\u7801\r\n  // return generate(ast)\r\n}\r\n", "import { NodeTypes } from \"./ast\";\r\n\r\n// \u521B\u5EFA\u4E0A\u4E0B\u6587\r\nfunction createParserContext(template) {\r\n  return {\r\n    line: 1,\r\n    column: 1,\r\n    offset: 0,\r\n    source: template, // \u6B64\u5B57\u6BB5\u4F1A\u88AB\u4E0D\u505C\u7684\u89E3\u6790\r\n    originalSource: template,\r\n  };\r\n}\r\n\r\nfunction isEnd(context) {\r\n  const source = context.source;\r\n  if (source.startsWith(\"</\")) {\r\n    return true;\r\n  }\r\n  return !source;\r\n}\r\n\r\n// \u6839\u636E\u4E0A\u4E0B\u6587\u83B7\u53D6\u4F4D\u7F6E\u4FE1\u606F\r\nfunction getCursor(context) {\r\n  let { line, column, offset } = context;\r\n  return { line, column, offset };\r\n}\r\n\r\n// \u66F4\u65B0\u504F\u79FB\u91CF\u4FE1\u606F\r\nfunction advancePositionWithMutation(context, source, endIndex) {\r\n  let linesCount = 0;\r\n  let linePos = -1;\r\n  for (let i = 0; i < endIndex; i++) {\r\n    if (source.charCodeAt(i) === 10) {\r\n      linesCount++;\r\n      linePos = i;\r\n    }\r\n  }\r\n\r\n  context.line += linesCount;\r\n  context.offset += endIndex;\r\n  context.column =\r\n    linePos === -1 ? context.column + endIndex : endIndex - linePos;\r\n}\r\n\r\nfunction advanceBy(context, endIndex) {\r\n  let source = context.source;\r\n  // \u6BCF\u6B21\u5220\u6389\u5185\u5BB9\u7684\u65F6\u5019\u90FD\u8981\u66F4\u65B0\u884C\u5217\u4FE1\u606F\r\n  advancePositionWithMutation(context, source, endIndex);\r\n  context.source = source.slice(endIndex);\r\n}\r\n// \u5904\u7406\u6587\u672C\u5185\u5BB9\uFF0C\u5E76\u4E14\u4F1A\u66F4\u65B0\u6700\u65B0\u7684\u504F\u79FB\u91CF\u4FE1\u606F\r\nfunction parseTextData(context, endIndex) {\r\n  const rawText = context.source.slice(0, endIndex);\r\n  advanceBy(context, endIndex);\r\n  return rawText;\r\n}\r\n// \u83B7\u53D6\u5F53\u524D\u5F00\u5934\u548C\u7ED3\u5C3E\u7684\u4F4D\u7F6E\u4FE1\u606F\r\nfunction getSelection(context, start, end?) {\r\n  end = end || getCursor(context);\r\n\r\n  return {\r\n    start,\r\n    end,\r\n    source: context.originalSource.slice(start.offset, end.offset),\r\n  };\r\n}\r\n\r\n// \u6587\u672C\u5904\u7406\r\nfunction parseText(context) {\r\n  // \u5728\u89E3\u6790\u6587\u672C\u7684\u65F6\u5019\u8981\u770B\u5230\u54EA\u91CC\u7ED3\u675F\r\n  // abc<div> abc{{}}\r\n\r\n  let endTokens = [\"<\", \"{{\"];\r\n  let endIndex = context.source.length; // \u9ED8\u8BA4\u8BA4\u4E3A\u5230\u6700\u540E\u7ED3\u675F\r\n  for (let i = 0; i < endTokens.length; i++) {\r\n    let index = context.source.indexOf(endTokens[i], 1);\r\n    if (index !== -1 && endIndex > index) {\r\n      endIndex = index;\r\n    }\r\n  }\r\n\r\n  // \u521B\u5EFA\u884C\u5217\u4FE1\u606F\r\n  const start = getCursor(context);\r\n  // \u53D6\u5185\u5BB9\r\n  const content = parseTextData(context, endIndex);\r\n\r\n  return {\r\n    type: NodeTypes.TEXT,\r\n    content: content,\r\n    loc: getSelection(context, start),\r\n  };\r\n}\r\n\r\n// \u89E3\u6790\u8868\u8FBE\u5F0F\r\nfunction parseInterpolation(context) {\r\n  const start = getCursor(context); // {{ xxx }}\r\n  // \u67E5\u627E\u7ED3\u675F\u7684\u5927\u62EC\u53F7\r\n  const closeIndex = context.source.indexOf(\"}}\", \"{{\".length);\r\n  advanceBy(context, 2); //   xxx  }}\r\n  const innerStart = getCursor(context);\r\n  const innerEnd = getCursor(context);\r\n\r\n  // \u62FF\u5230\u539F\u59CB\u7684\u5185\u5BB9\r\n  const rawContentLength = closeIndex - 2; // \u539F\u59CB\u5185\u5BB9\u7684\u957F\u5EA6\r\n  let preContent = parseTextData(context, rawContentLength); // }} \u8FD4\u56DE\u6587\u672C\u5185\u5BB9\uFF0C\u5E76\u66F4\u65B0\u4FE1\u606F\r\n  let content = preContent.trim();\r\n  let startOffset = preContent.indexOf(content);\r\n  if (startOffset > 0) {\r\n    advancePositionWithMutation(innerStart, preContent, startOffset);\r\n  }\r\n\r\n  let endOffset = startOffset + content.length;\r\n  advancePositionWithMutation(innerEnd, preContent, endOffset);\r\n\r\n  advanceBy(context, 2);\r\n\r\n  return {\r\n    type: NodeTypes.INTERPOLATION,\r\n    content: {\r\n      type: NodeTypes.SIMPLE_EXPRESSION,\r\n      content,\r\n      loc: getSelection(context, innerStart, innerEnd),\r\n    },\r\n    loc: getSelection(context, start),\r\n  };\r\n}\r\n\r\nfunction advanceBySpaces(context) {\r\n  let match = /^[ \\t\\r\\n]+/.exec(context.source);\r\n  if (match) {\r\n    advanceBy(context, match[0].length);\r\n  }\r\n}\r\n\r\nfunction parseAttributeValue(context) {\r\n  const start = getCursor(context);\r\n  let quote = context.source[0];\r\n  let content;\r\n  if (quote === '\"' || quote === \"'\") {\r\n    advanceBy(context, 1);\r\n    const endIndex = context.source.indexOf(quote);\r\n    content = parseTextData(context, endIndex);\r\n    advanceBy(context, 1);\r\n  }\r\n  return {\r\n    content,\r\n    loc: getSelection(context, start),\r\n  };\r\n}\r\n\r\nfunction parseAttribute(context) {\r\n  const start = getCursor(context);\r\n  // \u5C5E\u6027\u7684\u540D\u5B57\r\n  const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\r\n  let name = match[0];\r\n  advanceBy(context, name.length);\r\n  advanceBySpaces(context);\r\n  advanceBy(context, 1);\r\n  let value = parseAttributeValue(context);\r\n\r\n  const loc = getSelection(context, start);\r\n  return {\r\n    type: NodeTypes.ATTRIBUTE,\r\n    name,\r\n    value: {\r\n      type: NodeTypes.TEXT,\r\n      ...value,\r\n    },\r\n    loc,\r\n  };\r\n}\r\n\r\nfunction parseAttributes(context) {\r\n  const props = [];\r\n\r\n  while (context.source.length > 0 && !context.source.startsWith(\">\")) {\r\n    const prop = parseAttribute(context);\r\n    props.push(prop);\r\n    advanceBySpaces(context);\r\n  }\r\n\r\n  return props;\r\n}\r\n\r\nfunction parseTag(context) {\r\n  const start = getCursor(context);\r\n  const match = /^<\\/?([a-z][^ \\t\\r\\n/>]*)/.exec(context.source);\r\n  const tag = match[1];\r\n  advanceBy(context, match[0].length);\r\n  advanceBySpaces(context);\r\n\r\n  let props = parseAttributes(context);\r\n\r\n  let isSelfClosing = context.source.startsWith(\"/>\");\r\n  advanceBy(context, isSelfClosing ? 2 : 1);\r\n\r\n  return {\r\n    type: NodeTypes.ELEMENT,\r\n    tag: tag,\r\n    isSelfClosing,\r\n    children: [],\r\n    props,\r\n    loc: getSelection(context, start),\r\n  };\r\n}\r\n\r\n// \u89E3\u6790\u6807\u7B7E\r\nfunction parseElement(context) {\r\n  // <br/> <div a=\"1\"></div>\r\n  let ele = parseTag(context);\r\n\r\n  // \u513F\u5B50\r\n  let children = parseChildren(context);\r\n\r\n  if (context.source.startsWith(\"</\")) {\r\n    parseTag(context);\r\n  }\r\n  ele.loc = getSelection(context, ele.loc.start);\r\n  ele.children = children;\r\n  return ele;\r\n}\r\n\r\nexport function parse(template) {\r\n  // \u521B\u5EFA\u89E3\u6790\u4E0A\u4E0B\u6587\r\n  const context = createParserContext(template);\r\n\r\n  // < \u5143\u7D20\r\n  // {{}} \u8868\u8FBE\u5F0F\r\n  // \u5176\u4ED6\u5C31\u662F\u6587\u672C\r\n  const start = getCursor(context);\r\n  return createRoot(parseChildren(context), getSelection(context, start));\r\n}\r\n\r\nfunction createRoot(children, loc) {\r\n  return {\r\n    type: NodeTypes.ROOT,\r\n    children,\r\n    loc,\r\n  };\r\n}\r\n\r\nfunction parseChildren(context) {\r\n  const nodes = [];\r\n  while (!isEnd(context)) {\r\n    const source = context.source;\r\n    let node;\r\n    if (source.startsWith(\"{{\")) {\r\n      node = parseInterpolation(context);\r\n    } else if (source[0] === \"<\") {\r\n      node = parseElement(context);\r\n    }\r\n\r\n    if (!node) {\r\n      node = parseText(context);\r\n    }\r\n\r\n    nodes.push(node);\r\n  }\r\n  nodes.forEach((node, i) => {\r\n    if (node.type === NodeTypes.TEXT) {\r\n      if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\r\n        nodes[i] = null;\r\n      }\r\n    }\r\n  });\r\n  return nodes.filter(Boolean);\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
